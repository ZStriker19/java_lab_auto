[dd.trace 2020-08-31 12:10:11:205 -0600] [main] DEBUG datadog.trace.api.Config - New instance: Config(apiKey=****, profilingProxyPassword=null, runtimeId=81695baa-a0f5-4ae6-9734-fba9b531a28b, site=datadoghq.com, serviceName=springtest0, traceEnabled=true, integrationsEnabled=true, writerType=DDAgentWriter, agentHost=localhost, agentPort=8126, agentUnixDomainSocket=null, agentTimeout=10, prioritySamplingEnabled=true, traceResolverEnabled=true, serviceMapping={}, tags={}, spanTags={}, jmxTags={}, excludedClasses=[], headerTags={}, httpServerErrorStatuses={500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599}, httpClientErrorStatuses={400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499}, httpServerTagQueryString=false, httpClientTagQueryString=false, httpClientSplitByDomain=false, dbClientSplitByInstance=false, splitByTags=[], scopeDepthLimit=100, scopeStrictMode=false, partialFlushMinSpans=1000, runtimeContextFieldInjection=true, propagationStylesToExtract=[DATADOG], propagationStylesToInject=[DATADOG], jmxFetchEnabled=true, jmxFetchConfigDir=null, jmxFetchConfigs=[], jmxFetchMetricsConfigs=[], jmxFetchCheckPeriod=null, jmxFetchRefreshBeansPeriod=null, jmxFetchStatsdHost=null, jmxFetchStatsdPort=8125, healthMetricsEnabled=false, healthMetricsStatsdHost=null, healthMetricsStatsdPort=null, logsInjectionEnabled=true, reportHostName=false, traceAnnotations=null, traceMethods=null, traceExecutorsAll=false, traceExecutors=[], traceAnalyticsEnabled=true, traceSamplingServiceRules={}, traceSamplingOperationRules={}, traceSampleRate=null, traceRateLimit=100.0, profilingEnabled=false, profilingUrl=null, profilingTags={}, profilingStartDelay=10, profilingStartForceFirst=false, profilingUploadPeriod=60, profilingTemplateOverrideFile=null, profilingUploadTimeout=30, profilingUploadCompression=on, profilingProxyHost=null, profilingProxyPort=8080, profilingProxyUsername=null, profilingExceptionSampleLimit=10000, profilingExceptionHistogramTopItems=50, profilingExceptionHistogramMaxCollectionSize=10000, kafkaClientPropagationEnabled=true, kafkaClientBase64DecodingEnabled=false)
[dd.trace 2020-08-31 12:10:11:206 -0600] [main] DEBUG com.datadog.profiling.agent.ProfilingAgent - Profiling: not starting first
[dd.trace 2020-08-31 12:10:11:266 -0600] [main] DEBUG datadog.trace.bootstrap.WeakMap$Provider - Weak map provider set to datadog.trace.agent.tooling.WeakMapSuppliers$WeakConcurrent@3f91beef
[dd.trace 2020-08-31 12:10:11:314 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Too late to enable net.bytebuddy.raw
[dd.trace 2020-08-31 12:10:11:388 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.akkahttp.AkkaHttpClientInstrumentation
[dd.trace 2020-08-31 12:10:11:419 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.akkahttp.AkkaHttpServerInstrumentation
[dd.trace 2020-08-31 12:10:11:421 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.apachehttpasyncclient.ApacheHttpAsyncClientInstrumentation
[dd.trace 2020-08-31 12:10:11:425 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.apachehttpasyncclient.ApacheHttpClientRedirectInstrumentation
[dd.trace 2020-08-31 12:10:11:426 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.apachehttpclient.ApacheHttpClientInstrumentation
[dd.trace 2020-08-31 12:10:11:595 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.aws.v0.AWSClientInstrumentation
[dd.trace 2020-08-31 12:10:11:596 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.aws.v0.AWSClientInstrumentation com.amazonaws.AmazonWebServiceRequest=datadog.trace.instrumentation.aws.v0.RequestMeta
[dd.trace 2020-08-31 12:10:11:598 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.aws.v0.AWSHttpClientInstrumentation
[dd.trace 2020-08-31 12:10:11:598 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.aws.v0.AWSHttpClientInstrumentation$RequestExecutorInstrumentation
[dd.trace 2020-08-31 12:10:11:619 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.aws.v0.RequestInstrumentation
[dd.trace 2020-08-31 12:10:11:620 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.aws.v0.RequestInstrumentation com.amazonaws.AmazonWebServiceRequest=datadog.trace.instrumentation.aws.v0.RequestMeta
[dd.trace 2020-08-31 12:10:11:621 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.aws.v2.AwsClientInstrumentation
[dd.trace 2020-08-31 12:10:11:622 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.aws.v2.AwsHttpClientInstrumentation
[dd.trace 2020-08-31 12:10:11:624 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.classloading.ClassloadingInstrumentation
[dd.trace 2020-08-31 12:10:11:625 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.commonshttpclient.CommonsHttpClientInstrumentation
[dd.trace 2020-08-31 12:10:11:626 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.couchbase.client.CouchbaseBucketInstrumentation
[dd.trace 2020-08-31 12:10:11:628 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.couchbase.client.CouchbaseClusterInstrumentation
[dd.trace 2020-08-31 12:10:11:648 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.couchbase.client.CouchbaseCoreInstrumentation
[dd.trace 2020-08-31 12:10:11:648 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.couchbase.client.CouchbaseCoreInstrumentation com.couchbase.client.core.message.CouchbaseRequest=datadog.trace.bootstrap.instrumentation.api.AgentSpan
[dd.trace 2020-08-31 12:10:11:668 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.couchbase.client.CouchbaseNetworkInstrumentation
[dd.trace 2020-08-31 12:10:11:669 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.couchbase.client.CouchbaseNetworkInstrumentation com.couchbase.client.core.message.CouchbaseRequest=datadog.trace.bootstrap.instrumentation.api.AgentSpan
[dd.trace 2020-08-31 12:10:11:670 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.datastax.cassandra.CassandraClientInstrumentation
[dd.trace 2020-08-31 12:10:11:671 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.elasticsearch5.Elasticsearch5RestClientInstrumentation
[dd.trace 2020-08-31 12:10:11:672 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.elasticsearch6_4.Elasticsearch6RestClientInstrumentation
[dd.trace 2020-08-31 12:10:11:674 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.elasticsearch2.Elasticsearch2TransportClientInstrumentation
[dd.trace 2020-08-31 12:10:11:675 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.elasticsearch5.Elasticsearch5TransportClientInstrumentation
[dd.trace 2020-08-31 12:10:11:677 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.elasticsearch5_3.Elasticsearch53TransportClientInstrumentation
[dd.trace 2020-08-31 12:10:11:678 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.elasticsearch6.Elasticsearch6TransportClientInstrumentation
[dd.trace 2020-08-31 12:10:11:679 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.exceptions.instrumentation.ThrowableInstrumentation
[dd.trace 2020-08-31 12:10:11:679 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.exceptions.instrumentation.ThrowableInstrumentation@1e802ef9 is disabled
[dd.trace 2020-08-31 12:10:11:680 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.finatra.FinatraInstrumentation
[dd.trace 2020-08-31 12:10:11:681 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.glassfish.GlassFishInstrumentation
[dd.trace 2020-08-31 12:10:11:701 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.googlehttpclient.GoogleHttpClientInstrumentation
[dd.trace 2020-08-31 12:10:11:702 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.googlehttpclient.GoogleHttpClientInstrumentation com.google.api.client.http.HttpRequest=datadog.trace.instrumentation.googlehttpclient.RequestState
[dd.trace 2020-08-31 12:10:11:703 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzly.GrizzlyHttpHandlerInstrumentation
[dd.trace 2020-08-31 12:10:11:703 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.grizzly.GrizzlyHttpHandlerInstrumentation@7adda9cc is disabled
[dd.trace 2020-08-31 12:10:11:724 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzly.client.ClientRequestInstrumentation
[dd.trace 2020-08-31 12:10:11:724 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.grizzly.client.ClientRequestInstrumentation@363ee3a2 is disabled
[dd.trace 2020-08-31 12:10:11:745 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzly.client.ClientResponseInstrumentation
[dd.trace 2020-08-31 12:10:11:745 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.grizzly.client.ClientResponseInstrumentation@3aefe5e5 is disabled
[dd.trace 2020-08-31 12:10:11:746 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzlyhttp232.DefaultFilterChainInstrumentation
[dd.trace 2020-08-31 12:10:11:746 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.grizzlyhttp232.DefaultFilterChainInstrumentation@2f7c2f4f is disabled
[dd.trace 2020-08-31 12:10:11:747 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzlyhttp232.FilterInstrumentation
[dd.trace 2020-08-31 12:10:11:748 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzlyhttp232.HttpCodecFilterInstrumentation
[dd.trace 2020-08-31 12:10:11:748 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.grizzlyhttp232.HttpCodecFilterInstrumentation@6ef888f6 is disabled
[dd.trace 2020-08-31 12:10:11:749 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grizzlyhttp232.HttpServerFilterInstrumentation
[dd.trace 2020-08-31 12:10:11:749 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.grizzlyhttp232.HttpServerFilterInstrumentation@78b66d36 is disabled
[dd.trace 2020-08-31 12:10:11:751 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grpc.client.GrpcClientBuilderInstrumentation
[dd.trace 2020-08-31 12:10:11:752 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grpc.server.GrpcServerBuilderInstrumentation
[dd.trace 2020-08-31 12:10:11:753 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.grpc.server.InProcessServerStreamInstrumentation
[dd.trace 2020-08-31 12:10:11:772 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.guava10.ListenableFutureInstrumentation
[dd.trace 2020-08-31 12:10:11:773 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.guava10.ListenableFutureInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:11:794 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v3_3.CriteriaInstrumentation
[dd.trace 2020-08-31 12:10:11:794 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v3_3.CriteriaInstrumentation org.hibernate.Criteria=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:815 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v3_3.QueryInstrumentation
[dd.trace 2020-08-31 12:10:11:816 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v3_3.QueryInstrumentation org.hibernate.Query=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:877 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v3_3.SessionFactoryInstrumentation
[dd.trace 2020-08-31 12:10:11:877 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionFactoryInstrumentation org.hibernate.StatelessSession=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:878 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionFactoryInstrumentation org.hibernate.SharedSessionContract=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:878 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionFactoryInstrumentation org.hibernate.Session=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:976 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation
[dd.trace 2020-08-31 12:10:11:977 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation org.hibernate.Transaction=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:977 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation org.hibernate.Criteria=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:977 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation org.hibernate.StatelessSession=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:977 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation org.hibernate.Session=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:977 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation org.hibernate.Query=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:11:998 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v3_3.TransactionInstrumentation
[dd.trace 2020-08-31 12:10:11:998 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v3_3.TransactionInstrumentation org.hibernate.Transaction=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:020 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_0.CriteriaInstrumentation
[dd.trace 2020-08-31 12:10:12:020 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.CriteriaInstrumentation org.hibernate.Criteria=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:040 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_0.QueryInstrumentation
[dd.trace 2020-08-31 12:10:12:041 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.QueryInstrumentation org.hibernate.Query=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:067 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_0.SessionFactoryInstrumentation
[dd.trace 2020-08-31 12:10:12:068 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.SessionFactoryInstrumentation org.hibernate.SharedSessionContract=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:144 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_0.SessionInstrumentation
[dd.trace 2020-08-31 12:10:12:144 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.SessionInstrumentation org.hibernate.Transaction=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:144 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.SessionInstrumentation org.hibernate.Criteria=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:145 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.SessionInstrumentation org.hibernate.SharedSessionContract=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:145 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.SessionInstrumentation org.hibernate.Query=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:164 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_0.TransactionInstrumentation
[dd.trace 2020-08-31 12:10:12:164 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_0.TransactionInstrumentation org.hibernate.Transaction=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:184 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_3.ProcedureCallInstrumentation
[dd.trace 2020-08-31 12:10:12:184 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.hibernate.core.v4_3.ProcedureCallInstrumentation org.hibernate.procedure.ProcedureCall=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:223 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hibernate.core.v4_3.SessionInstrumentation
[dd.trace 2020-08-31 12:10:12:224 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_3.SessionInstrumentation org.hibernate.procedure.ProcedureCall=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:224 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.hibernate.core.v4_3.SessionInstrumentation org.hibernate.SharedSessionContract=datadog.trace.instrumentation.hibernate.SessionState
[dd.trace 2020-08-31 12:10:12:243 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation
[dd.trace 2020-08-31 12:10:12:244 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation java.net.HttpURLConnection=datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation$HttpUrlState
[dd.trace 2020-08-31 12:10:12:245 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.http_url_connection.UrlInstrumentation
[dd.trace 2020-08-31 12:10:12:246 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hystrix.HystrixInstrumentation
[dd.trace 2020-08-31 12:10:12:247 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.hystrix.HystrixThreadPoolInstrumentation
[dd.trace 2020-08-31 12:10:12:268 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.AkkaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:12:269 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.java.concurrent.AkkaExecutorInstrumentation akka.dispatch.forkjoin.ForkJoinTask=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:330 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.AkkaForkJoinTaskInstrumentation
[dd.trace 2020-08-31 12:10:12:330 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.java.concurrent.AkkaForkJoinTaskInstrumentation java.util.concurrent.Callable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:331 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.AkkaForkJoinTaskInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:331 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.AkkaForkJoinTaskInstrumentation akka.dispatch.forkjoin.ForkJoinTask=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:337 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.AsyncPropagatingDisableInstrumentation
[dd.trace 2020-08-31 12:10:12:365 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:10:12:366 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.CallableInstrumentation java.util.concurrent.Callable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:385 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.FutureInstrumentation
[dd.trace 2020-08-31 12:10:12:386 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.java.concurrent.FutureInstrumentation java.util.concurrent.Future=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:465 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:12:465 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation java.util.concurrent.ForkJoinTask=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:466 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation java.util.concurrent.Future=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:466 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation java.util.concurrent.Callable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:466 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:524 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.JavaForkJoinTaskInstrumentation
[dd.trace 2020-08-31 12:10:12:524 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.JavaForkJoinTaskInstrumentation java.util.concurrent.ForkJoinTask=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:524 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.JavaForkJoinTaskInstrumentation java.util.concurrent.Callable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:524 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.JavaForkJoinTaskInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:543 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation
[dd.trace 2020-08-31 12:10:12:544 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:563 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:12:563 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:582 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.ScalaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:12:583 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.java.concurrent.ScalaExecutorInstrumentation scala.concurrent.forkjoin.ForkJoinTask=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:640 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.ScalaForkJoinTaskInstrumentation
[dd.trace 2020-08-31 12:10:12:640 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.ScalaForkJoinTaskInstrumentation scala.concurrent.forkjoin.ForkJoinTask=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:640 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.ScalaForkJoinTaskInstrumentation java.util.concurrent.Callable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:640 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.java.concurrent.ScalaForkJoinTaskInstrumentation java.lang.Runnable=datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:12:641 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.java.concurrent.ThreadPoolExecutorInstrumentation
[dd.trace 2020-08-31 12:10:12:642 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs1.JaxRsAnnotationsInstrumentation
[dd.trace 2020-08-31 12:10:12:644 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.JerseyRequestContextInstrumentation
[dd.trace 2020-08-31 12:10:12:645 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.Resteasy30RequestContextInstrumentation
[dd.trace 2020-08-31 12:10:12:646 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.Resteasy31RequestContextInstrumentation
[dd.trace 2020-08-31 12:10:12:647 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.ContainerRequestFilterInstrumentation
[dd.trace 2020-08-31 12:10:12:648 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.DefaultRequestContextInstrumentation
[dd.trace 2020-08-31 12:10:12:668 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.JaxRsAnnotationsInstrumentation
[dd.trace 2020-08-31 12:10:12:669 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.jaxrs2.JaxRsAnnotationsInstrumentation javax.ws.rs.container.AsyncResponse=datadog.trace.bootstrap.instrumentation.api.AgentSpan
[dd.trace 2020-08-31 12:10:12:689 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs2.JaxRsAsyncResponseInstrumentation
[dd.trace 2020-08-31 12:10:12:689 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.jaxrs2.JaxRsAsyncResponseInstrumentation javax.ws.rs.container.AsyncResponse=datadog.trace.bootstrap.instrumentation.api.AgentSpan
[dd.trace 2020-08-31 12:10:12:690 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs.v1.JaxRsClientV1Instrumentation
[dd.trace 2020-08-31 12:10:12:691 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jaxrs.JaxRsClientInstrumentation
[dd.trace 2020-08-31 12:10:12:692 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jdbc.ConnectionInstrumentation
[dd.trace 2020-08-31 12:10:12:693 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jdbc.DataSourceInstrumentation
[dd.trace 2020-08-31 12:10:12:693 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.jdbc.DataSourceInstrumentation@45c7e403 is disabled
[dd.trace 2020-08-31 12:10:12:693 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jdbc.DriverInstrumentation
[dd.trace 2020-08-31 12:10:12:695 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jdbc.PreparedStatementInstrumentation
[dd.trace 2020-08-31 12:10:12:696 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jdbc.StatementInstrumentation
[dd.trace 2020-08-31 12:10:12:697 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jedis.JedisInstrumentation
[dd.trace 2020-08-31 12:10:12:697 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jedis30.JedisInstrumentation
[dd.trace 2020-08-31 12:10:12:699 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jetty8.JettyHandlerInstrumentation
[dd.trace 2020-08-31 12:10:12:699 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.jetty8.JettyHandlerInstrumentation@5e5d171f is disabled
[dd.trace 2020-08-31 12:10:12:700 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jms.JMSMessageConsumerInstrumentation
[dd.trace 2020-08-31 12:10:12:701 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jms.JMSMessageListenerInstrumentation
[dd.trace 2020-08-31 12:10:12:702 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jms.JMSMessageProducerInstrumentation
[dd.trace 2020-08-31 12:10:12:703 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jsp.JSPInstrumentation
[dd.trace 2020-08-31 12:10:12:704 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.jsp.JasperJSPCompilationContextInstrumentation
[dd.trace 2020-08-31 12:10:12:706 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.kafka_clients.KafkaConsumerInstrumentation
[dd.trace 2020-08-31 12:10:12:707 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.kafka_clients.KafkaProducerInstrumentation
[dd.trace 2020-08-31 12:10:12:708 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.kafka_streams.KafkaStreamsProcessorInstrumentation$StartInstrumentation
[dd.trace 2020-08-31 12:10:12:709 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.kafka_streams.KafkaStreamsProcessorInstrumentation$StopInstrumentation
[dd.trace 2020-08-31 12:10:12:710 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.kafka_streams.KafkaStreamsSourceNodeRecordDeserializerInstrumentation
[dd.trace 2020-08-31 12:10:12:711 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.lettuce4.LettuceAsyncCommandsInstrumentation
[dd.trace 2020-08-31 12:10:12:712 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.lettuce4.LettuceClientInstrumentation
[dd.trace 2020-08-31 12:10:12:713 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.lettuce5.LettuceAsyncCommandsInstrumentation
[dd.trace 2020-08-31 12:10:12:714 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.lettuce5.LettuceClientInstrumentation
[dd.trace 2020-08-31 12:10:12:716 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.lettuce5.LettuceReactiveCommandsInstrumentation
[dd.trace 2020-08-31 12:10:12:716 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.log4j1.Log4j1MDCInstrumentation
[dd.trace 2020-08-31 12:10:12:717 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.log4j2.ThreadContextInstrumentation
[dd.trace 2020-08-31 12:10:12:739 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty38.ChannelFutureListenerInstrumentation
[dd.trace 2020-08-31 12:10:12:739 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.netty38.ChannelFutureListenerInstrumentation org.jboss.netty.channel.Channel=datadog.trace.instrumentation.netty38.ChannelTraceContext
[dd.trace 2020-08-31 12:10:12:758 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty38.NettyChannelInstrumentation
[dd.trace 2020-08-31 12:10:12:759 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.netty38.NettyChannelInstrumentation org.jboss.netty.channel.Channel=datadog.trace.instrumentation.netty38.ChannelTraceContext
[dd.trace 2020-08-31 12:10:12:778 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty38.NettyChannelPipelineInstrumentation
[dd.trace 2020-08-31 12:10:12:778 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.netty38.NettyChannelPipelineInstrumentation org.jboss.netty.channel.Channel=datadog.trace.instrumentation.netty38.ChannelTraceContext
[dd.trace 2020-08-31 12:10:12:782 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty40.ChannelFutureListenerInstrumentation
[dd.trace 2020-08-31 12:10:12:782 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty40.NettyChannelPipelineInstrumentation
[dd.trace 2020-08-31 12:10:12:786 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty41.ChannelFutureListenerInstrumentation
[dd.trace 2020-08-31 12:10:12:786 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.netty41.NettyChannelPipelineInstrumentation
[dd.trace 2020-08-31 12:10:12:787 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.okhttp2.OkHttp2Instrumentation
[dd.trace 2020-08-31 12:10:12:788 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.okhttp3.OkHttp3Instrumentation
[dd.trace 2020-08-31 12:10:12:790 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.opentelemetry.OpenTelemetryInstrumentation
[dd.trace 2020-08-31 12:10:12:791 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.opentelemetry.OpenTelemetryInstrumentation@6db9f5a4 is disabled
[dd.trace 2020-08-31 12:10:12:792 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.opentracing31.GlobalTracerInstrumentation
[dd.trace 2020-08-31 12:10:12:794 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.opentracing32.GlobalTracerInstrumentation
[dd.trace 2020-08-31 12:10:12:796 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.play23.PlayInstrumentation
[dd.trace 2020-08-31 12:10:12:797 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.play24.PlayInstrumentation
[dd.trace 2020-08-31 12:10:12:799 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.play26.PlayInstrumentation
[dd.trace 2020-08-31 12:10:12:800 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.playws1.PlayWSClientInstrumentation
[dd.trace 2020-08-31 12:10:12:801 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.playws2.PlayWSClientInstrumentation
[dd.trace 2020-08-31 12:10:12:803 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.playws21.PlayWSClientInstrumentation
[dd.trace 2020-08-31 12:10:12:804 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rabbitmq.amqp.RabbitChannelInstrumentation
[dd.trace 2020-08-31 12:10:12:807 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rabbitmq.amqp.RabbitCommandInstrumentation
[dd.trace 2020-08-31 12:10:12:807 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.ratpack.ContinuationInstrumentation
[dd.trace 2020-08-31 12:10:12:808 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.ratpack.DefaultExecutionInstrumentation
[dd.trace 2020-08-31 12:10:12:809 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.ratpack.ServerErrorHandlerInstrumentation
[dd.trace 2020-08-31 12:10:12:810 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.ratpack.ServerRegistryInstrumentation
[dd.trace 2020-08-31 12:10:12:812 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.reactor.core.ReactorHooksInstrumentation
[dd.trace 2020-08-31 12:10:12:813 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rediscala.RediscalaInstrumentation
[dd.trace 2020-08-31 12:10:12:814 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rmi.client.RmiClientInstrumentation
[dd.trace 2020-08-31 12:10:12:835 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rmi.context.client.RmiClientContextInstrumentation
[dd.trace 2020-08-31 12:10:12:835 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.rmi.context.client.RmiClientContextInstrumentation sun.rmi.transport.Connection=java.lang.Boolean
[dd.trace 2020-08-31 12:10:12:836 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rmi.context.server.RmiServerContextInstrumentation
[dd.trace 2020-08-31 12:10:12:837 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.rmi.server.RmiServerInstrumentation
[dd.trace 2020-08-31 12:10:12:858 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation
[dd.trace 2020-08-31 12:10:12:858 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation javax.servlet.RequestDispatcher=java.lang.String
[dd.trace 2020-08-31 12:10:12:877 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation
[dd.trace 2020-08-31 12:10:12:878 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation javax.servlet.RequestDispatcher=java.lang.String
[dd.trace 2020-08-31 12:10:12:879 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet.filter.FilterInstrumentation
[dd.trace 2020-08-31 12:10:12:879 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.servlet.filter.FilterInstrumentation@6f27a732 is disabled
[dd.trace 2020-08-31 12:10:12:879 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet.http.HttpServletInstrumentation
[dd.trace 2020-08-31 12:10:12:879 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.servlet.http.HttpServletInstrumentation@2cdd0d4b is disabled
[dd.trace 2020-08-31 12:10:12:899 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:12:899 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation javax.servlet.http.HttpServletResponse=javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:12:900 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.slf4j.mdc.MDCInjectionInstrumentation
[dd.trace 2020-08-31 12:10:12:901 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.sparkjava.RoutesInstrumentation
[dd.trace 2020-08-31 12:10:12:901 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Instrumentation datadog.trace.instrumentation.sparkjava.RoutesInstrumentation@3541cb24 is disabled
[dd.trace 2020-08-31 12:10:12:902 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springdata.SpringRepositoryInstrumentation
[dd.trace 2020-08-31 12:10:12:903 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springscheduling.SpringSchedulingInstrumentation
[dd.trace 2020-08-31 12:10:12:904 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springwebflux.client.WebClientFilterInstrumentation
[dd.trace 2020-08-31 12:10:12:905 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springwebflux.server.DispatcherHandlerInstrumentation
[dd.trace 2020-08-31 12:10:12:906 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springwebflux.server.HandlerAdapterInstrumentation
[dd.trace 2020-08-31 12:10:12:908 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springwebflux.server.RouterFunctionInstrumentation
[dd.trace 2020-08-31 12:10:12:909 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springweb.DispatcherServletInstrumentation
[dd.trace 2020-08-31 12:10:12:910 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springweb.HandlerAdapterInstrumentation
[dd.trace 2020-08-31 12:10:12:911 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.springweb.WebApplicationContextInstrumentation
[dd.trace 2020-08-31 12:10:12:913 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.spymemcached.MemcachedClientInstrumentation
[dd.trace 2020-08-31 12:10:12:916 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.trace_annotation.TraceAnnotationsInstrumentation
[dd.trace 2020-08-31 12:10:12:917 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.trace_annotation.TraceConfigInstrumentation
[dd.trace 2020-08-31 12:10:12:918 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.twilio.TwilioAsyncInstrumentation
[dd.trace 2020-08-31 12:10:12:919 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.twilio.TwilioSyncInstrumentation
[dd.trace 2020-08-31 12:10:12:920 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.dropwizard.view.DropwizardViewInstrumentation
[dd.trace 2020-08-31 12:10:12:921 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.connection_error.jersey.JerseyClientConnectionErrorInstrumentation
[dd.trace 2020-08-31 12:10:12:922 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.connection_error.resteasy.ResteasyClientConnectionErrorInstrumentation
[dd.trace 2020-08-31 12:10:12:923 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.mongo.MongoAsyncClientInstrumentation
[dd.trace 2020-08-31 12:10:12:925 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.mongo.MongoClientInstrumentation
[dd.trace 2020-08-31 12:10:12:963 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet2.Servlet2Instrumentation
[dd.trace 2020-08-31 12:10:12:964 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Making builder for datadog.trace.instrumentation.servlet2.Servlet2Instrumentation javax.servlet.ServletResponse=java.lang.Integer
[dd.trace 2020-08-31 12:10:12:964 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.servlet2.Servlet2Instrumentation javax.servlet.http.HttpServletResponse=javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:12:986 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet2.Servlet2ResponseStatusInstrumentation
[dd.trace 2020-08-31 12:10:12:986 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.servlet2.Servlet2ResponseStatusInstrumentation javax.servlet.ServletResponse=java.lang.Integer
[dd.trace 2020-08-31 12:10:12:987 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet3.AsyncContextInstrumentation
[dd.trace 2020-08-31 12:10:13:007 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Loading instrumentation datadog.trace.instrumentation.servlet3.Servlet3Instrumentation
[dd.trace 2020-08-31 12:10:13:008 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Skipping builder for datadog.trace.instrumentation.servlet3.Servlet3Instrumentation javax.servlet.http.HttpServletResponse=javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:13:008 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller - Installed 162 instrumenter(s)
[dd.trace 2020-08-31 12:10:13:122 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.FutureInstrumentation on null
[dd.trace 2020-08-31 12:10:13:145 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on null
[dd.trace 2020-08-31 12:10:13:147 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on null
[dd.trace 2020-08-31 12:10:13:154 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.FutureInstrumentation on null
[dd.trace 2020-08-31 12:10:13:156 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.FutureInstrumentation on null
[dd.trace 2020-08-31 12:10:13:180 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:181 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:184 -0600] [main] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for java.util.concurrent.Executors$DelegatedScheduledExecutorService
[dd.trace 2020-08-31 12:10:13:184 -0600] [main] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for java.util.concurrent.Executors$DelegatedScheduledExecutorService
[dd.trace 2020-08-31 12:10:13:186 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:192 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:248 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: httpurlconnection -- datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation on null
[dd.trace 2020-08-31 12:10:13:385 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: urlconnection -- datadog.trace.instrumentation.http_url_connection.UrlInstrumentation on null
[dd.trace 2020-08-31 12:10:13:394 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.FutureInstrumentation on null
[dd.trace 2020-08-31 12:10:13:397 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaForkJoinTaskInstrumentation on null
[dd.trace 2020-08-31 12:10:13:401 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:408 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:442 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:445 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:514 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.FutureInstrumentation
[dd.trace 2020-08-31 12:10:13:514 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.FutureInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:525 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ForkJoinTask -- null
[dd.trace 2020-08-31 12:10:13:529 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on null
[dd.trace 2020-08-31 12:10:13:529 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:531 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:560 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:13:560 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:563 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ThreadPoolExecutor$Worker -- null
[dd.trace 2020-08-31 12:10:13:564 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on null
[dd.trace 2020-08-31 12:10:13:565 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:567 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:577 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:10:13:578 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.CallableInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:579 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.Executors$RunnableAdapter -- null
[dd.trace 2020-08-31 12:10:13:585 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.FutureInstrumentation on null
[dd.trace 2020-08-31 12:10:13:587 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on null
[dd.trace 2020-08-31 12:10:13:616 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:13:616 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:620 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.FutureInstrumentation
[dd.trace 2020-08-31 12:10:13:620 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.FutureInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:621 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask -- null
[dd.trace 2020-08-31 12:10:13:623 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.FutureInstrumentation on null
[dd.trace 2020-08-31 12:10:13:624 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on null
[dd.trace 2020-08-31 12:10:13:651 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:13:651 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:658 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.FutureInstrumentation
[dd.trace 2020-08-31 12:10:13:658 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.FutureInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:659 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.FutureTask -- null
[dd.trace 2020-08-31 12:10:13:665 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:668 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:669 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:672 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$datadog$trace$bootstrap$instrumentation$java$concurrent$State, datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:743 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:745 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:13:851 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:851 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:855 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:855 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:857 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:857 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:860 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:860 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:862 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:862 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:865 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:865 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:867 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:867 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:870 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:870 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:874 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:874 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:878 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:878 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:882 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:13:883 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:13:889 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ScheduledThreadPoolExecutor -- null
[dd.trace 2020-08-31 12:10:13:891 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:891 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:13:892 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.ThreadPoolExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:050 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:050 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:071 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ThreadPoolExecutor -- null
[dd.trace 2020-08-31 12:10:14:074 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:075 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:177 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:177 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:180 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:180 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:182 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:182 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:185 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:185 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:188 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:188 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:190 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:190 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:192 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:192 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:195 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:196 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:198 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:199 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:202 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:202 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:206 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:206 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:210 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:210 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:212 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:213 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:216 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:217 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:220 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:220 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:222 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.Executors$DelegatedExecutorService -- null
[dd.trace 2020-08-31 12:10:14:223 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:224 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:328 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:328 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:331 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:331 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:333 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:334 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:337 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:337 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:339 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:339 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:342 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:342 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Future -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:347 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:347 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:351 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:352 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:356 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:356 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:360 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:360 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:364 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:364 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:369 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:369 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:373 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:373 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:387 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation
[dd.trace 2020-08-31 12:10:14:387 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:389 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.AbstractExecutorService -- null
[dd.trace 2020-08-31 12:10:14:392 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: httpurlconnection -- datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation on null
[dd.trace 2020-08-31 12:10:14:392 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionDecorator, datadog.trace.instrumentation.http_url_connection.HeadersInjectAdapter, datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation$HttpUrlState, datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation$HttpUrlState$1]
[dd.trace 2020-08-31 12:10:14:397 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$net$HttpURLConnection$datadog$trace$instrumentation$http_url_connection$HttpUrlConnectionInstrumentation$HttpUrlState]
[dd.trace 2020-08-31 12:10:14:399 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$net$HttpURLConnection$datadog$trace$instrumentation$http_url_connection$HttpUrlConnectionInstrumentation$HttpUrlState]
[dd.trace 2020-08-31 12:10:14:444 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.net.HttpURLConnection -- null
[dd.trace 2020-08-31 12:10:14:445 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: urlconnection -- datadog.trace.instrumentation.http_url_connection.UrlInstrumentation on null
[dd.trace 2020-08-31 12:10:14:490 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.net.URL -- null
[dd.trace 2020-08-31 12:10:14:564 -0600] [main] INFO datadog.trace.agent.jmxfetch.JMXFetch - JMXFetch config: null [] [] [] null null {runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, service=springtest0} statsd:localhost:8125
[dd.trace 2020-08-31 12:10:14:583 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:583 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation on null
[dd.trace 2020-08-31 12:10:14:679 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.Executors$FinalizableDelegatedExecutorService -- null
[dd.trace 2020-08-31 12:10:14:691 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on null
[dd.trace 2020-08-31 12:10:14:691 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:14:694 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$datadog$trace$bootstrap$instrumentation$java$concurrent$State]
[dd.trace 2020-08-31 12:10:14:705 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:14:705 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:14:708 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed datadog.trace.bootstrap.instrumentation.java.concurrent.RunnableWrapper -- null
[dd.trace 2020-08-31 12:10:14:710 -0600] [main] INFO datadog.trace.bootstrap.Agent - Initializing JMX thread CPU time provider
[dd.trace 2020-08-31 12:10:14:711 -0600] [main] DEBUG datadog.trace.agent.core.util.ThreadCpuTimeAccess - Will not enable thread CPU time access. Profiling is disabled.
[dd.trace 2020-08-31 12:10:14:711 -0600] [main] INFO datadog.trace.bootstrap.Agent - Initializing JMX thread deadlock detector
[dd.trace 2020-08-31 12:10:14:713 -0600] [main] INFO datadog.trace.bootstrap.Agent - Unable to initialize JMX thread deadlock detector
java.lang.NoClassDefFoundError: jdk/jfr/Event
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:756)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:74)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:363)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	at datadog.trace.bootstrap.DatadogClassLoader$DelegateClassLoader.loadClass(DatadogClassLoader.java:161)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at com.datadog.profiling.controller.openjdk.events.DeadlockEventFactory.<clinit>(DeadlockEventFactory.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at datadog.trace.bootstrap.Agent.registerDeadlockDetectionEvent(Agent.java:278)
	at datadog.trace.bootstrap.Agent.startJmx(Agent.java:267)
	at datadog.trace.bootstrap.Agent.start(Agent.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at datadog.trace.bootstrap.AgentBootstrap.agentmain(AgentBootstrap.java:58)
	at datadog.trace.bootstrap.AgentBootstrap.premain(AgentBootstrap.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:386)
	at sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:401)
Caused by: java.lang.ClassNotFoundException: jdk.jfr.Event
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at datadog.trace.bootstrap.DatadogClassLoader.loadFromPackage(DatadogClassLoader.java:74)
	at datadog.trace.bootstrap.DatadogClassLoader$DelegateClassLoader.loadClass(DatadogClassLoader.java:163)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 31 more
[dd.trace 2020-08-31 12:10:14:714 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - JMX Fetch 0.38.0 has started
[dd.trace 2020-08-31 12:10:14:716 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Reading jmxfetch-config.yaml
[dd.trace 2020-08-31 12:10:14:722 -0600] [main] DEBUG datadog.trace.agent.common.sampling.DeterministicSampler - Initializing the RateSampler, sampleRate: 100.0 %
[dd.trace 2020-08-31 12:10:14:769 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Found 1 config files
[dd.trace 2020-08-31 12:10:14:769 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Cleaning up instances...
[dd.trace 2020-08-31 12:10:14:779 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Dealing with YAML config instances...
[dd.trace 2020-08-31 12:10:14:785 -0600] [main] INFO datadog.trace.agent.core.DDTraceCoreInfo - dd-trace - version: 0.58.0~e61d5bf97
[dd.trace 2020-08-31 12:10:14:786 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Profiling of ScopeEvents is not available
[dd.trace 2020-08-31 12:10:14:790 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Instantiating instance for: jmxfetch-config
[dd.trace 2020-08-31 12:10:14:831 -0600] [main] INFO datadog.trace.agent.core.CoreTracer - New instance: DDTracer-18ca3c62{ serviceName=springtest0, writer=datadog.trace.agent.common.writer.DDAgentWriter@2c0f7678, sampler=datadog.trace.agent.common.sampling.RateByServiceSampler@44d70181, defaultSpanTags={}}
[dd.trace 2020-08-31 12:10:14:835 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Decorator added: 'manual.drop' -> datadog.trace.agent.core.taginterceptor.ForceManualDropTagInterceptor
[dd.trace 2020-08-31 12:10:14:835 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Decorator added: 'manual.keep' -> datadog.trace.agent.core.taginterceptor.ForceManualKeepTagInterceptor
[dd.trace 2020-08-31 12:10:14:835 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Decorator added: 'peer.service' -> datadog.trace.agent.core.taginterceptor.PeerServiceTagInterceptor
[dd.trace 2020-08-31 12:10:14:836 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Decorator added: 'service.name' -> datadog.trace.agent.core.taginterceptor.ServiceNameTagInterceptor
[dd.trace 2020-08-31 12:10:14:836 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Decorator added: 'service' -> datadog.trace.agent.core.taginterceptor.ServiceNameTagInterceptor
[dd.trace 2020-08-31 12:10:14:836 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Dealing with Auto-Config instances collected...
[dd.trace 2020-08-31 12:10:14:836 -0600] [main] DEBUG datadog.trace.agent.core.CoreTracer - Decorator added: 'servlet.context' -> datadog.trace.agent.core.taginterceptor.ServletContextTagInterceptor
[dd.trace 2020-08-31 12:10:14:836 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Started instance initialization...
[dd.trace 2020-08-31 12:10:14:837 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.Instance - Trying to connect to JMX Server at jvm_direct
[dd.trace 2020-08-31 12:10:14:837 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.Instance - Connection closed or does not exist. Attempting to create a new connection...
[dd.trace 2020-08-31 12:10:14:839 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.ConnectionFactory - Connecting to JMX directly on the JVM
[dd.trace 2020-08-31 12:10:14:850 -0600] [main] INFO datadog.trace.agent.tooling.VersionLogger - dd-trace-core - version: 0.58.0~e61d5bf97
[dd.trace 2020-08-31 12:10:14:851 -0600] [main] INFO datadog.trace.agent.tooling.VersionLogger - dd-trace-api - version: 0.58.0~e61d5bf97
[dd.trace 2020-08-31 12:10:14:851 -0600] [main] INFO datadog.trace.agent.tooling.VersionLogger - dd-java-agent - version: 0.58.0~e61d5bf97
[dd.trace 2020-08-31 12:10:14:851 -0600] [main] DEBUG datadog.trace.agent.tooling.VersionLogger - Running on Java 1.8.0_252. JVM OpenJDK 64-Bit Server VM GraalVM CE 20.1.0 - GraalVM Community - 25.252-b09-jvmci-20.1-b02
[dd.trace 2020-08-31 12:10:14:851 -0600] [main] DEBUG datadog.trace.agent.tooling.TracerInstaller - datadog.trace.api.GlobalTracer loaded on null
[dd.trace 2020-08-31 12:10:14:852 -0600] [main] DEBUG datadog.trace.agent.tooling.TracerInstaller - datadog.trace.agent.tooling.AgentInstaller loaded on inst
[dd.trace 2020-08-31 12:10:14:852 -0600] [main] INFO com.datadog.profiling.agent.ProfilingAgent - Profiling: disabled
[dd.trace 2020-08-31 12:10:14:878 -0600] [jmxfetch-recoveryPool-1] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for javax.management.NotificationBroadcasterSupport$1
[dd.trace 2020-08-31 12:10:14:878 -0600] [jmxfetch-recoveryPool-1] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for javax.management.NotificationBroadcasterSupport$1
[dd.trace 2020-08-31 12:10:14:935 -0600] [JVMCI-native CompilerThread2] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on java.net.FactoryURLClassLoader@5a218c25
[dd.trace 2020-08-31 12:10:14:952 -0600] [JVMCI-native CompilerThread2] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle org.graalvm.compiler.hotspot.management.SVMMBean$Factory for transformation on classloader java.net.FactoryURLClassLoader@5a218c25: Cannot resolve type description for org.graalvm.compiler.hotspot.management.SVMMBean$1
[dd.trace 2020-08-31 12:10:15:022 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.Instance - Trying to collect bean list for the first time for JMX Server at jvm_direct
[dd.trace 2020-08-31 12:10:15:025 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Connection - Querying bean names on scope: java.lang:*
[dd.trace 2020-08-31 12:10:15:025 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Connection - Querying bean names on scope: java.nio:type=BufferPool,*
[dd.trace 2020-08-31 12:10:15:025 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.Instance - Connected to JMX Server at jvm_direct
[dd.trace 2020-08-31 12:10:15:025 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryPool,name=Metaspace
[dd.trace 2020-08-31 12:10:15:025 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryPool,name=Metaspace
[dd.trace 2020-08-31 12:10:15:025 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:026 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Type,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.management.MemoryType}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:027 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:028 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Usage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:034 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=PeakUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:036 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryManagerNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:036 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=UsageThreshold, name=UsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:037 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=UsageThresholdExceeded, name=UsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:037 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=UsageThresholdCount, name=UsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:038 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=UsageThresholdSupported, name=UsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:038 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=CollectionUsageThreshold, name=CollectionUsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:039 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdExceeded, name=CollectionUsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:039 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdCount, name=CollectionUsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:039 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=CollectionUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:041 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdSupported, name=CollectionUsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:042 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Metaspace : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:042 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryPool,name=PS Old Gen
[dd.trace 2020-08-31 12:10:15:042 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryPool,name=PS Old Gen
[dd.trace 2020-08-31 12:10:15:042 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:042 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Type,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.management.MemoryType}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:043 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:043 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Usage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:044 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=PeakUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:045 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryManagerNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:045 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=UsageThreshold, name=UsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:046 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=UsageThresholdExceeded, name=UsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:046 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=UsageThresholdCount, name=UsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:047 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=UsageThresholdSupported, name=UsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:047 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=CollectionUsageThreshold, name=CollectionUsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:048 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdExceeded, name=CollectionUsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:048 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdCount, name=CollectionUsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:048 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=CollectionUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:049 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdSupported, name=CollectionUsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:049 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Old Gen : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:049 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=GarbageCollector,name=PS Scavenge
[dd.trace 2020-08-31 12:10:15:050 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=GarbageCollector,name=PS Scavenge
[dd.trace 2020-08-31 12:10:15:050 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=LastGcInfo,openType=javax.management.openmbean.CompositeType(name=com.sun.management.GcInfo,items=((itemName=duration,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=endTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=id,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=memoryUsageAfterGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=memoryUsageBeforeGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=startTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=com.sun.management.GcInfo,items=((itemName=duration,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=endTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=id,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=memoryUsageAfterGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=memoryUsageBeforeGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=startTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=com.sun.management.GcInfo}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:058 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.MBeanAttributeInfo[description=CollectionCount, name=CollectionCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:059 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.MBeanAttributeInfo[description=CollectionTime, name=CollectionTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:061 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:063 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:064 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryPoolNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:064 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS Scavenge : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:064 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryPool,name=PS Eden Space
[dd.trace 2020-08-31 12:10:15:064 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryPool,name=PS Eden Space
[dd.trace 2020-08-31 12:10:15:064 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:064 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Type,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.management.MemoryType}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:065 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:065 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Usage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:066 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=PeakUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:066 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryManagerNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:066 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=UsageThreshold, name=UsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:067 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=UsageThresholdExceeded, name=UsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:067 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=UsageThresholdCount, name=UsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:068 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=UsageThresholdSupported, name=UsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:068 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThreshold, name=CollectionUsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:068 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdExceeded, name=CollectionUsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:069 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdCount, name=CollectionUsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:069 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=CollectionUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:070 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdSupported, name=CollectionUsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:070 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Eden Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:070 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=Runtime
[dd.trace 2020-08-31 12:10:15:070 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=Runtime
[dd.trace 2020-08-31 12:10:15:070 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:071 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ClassPath,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:071 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=SystemProperties,openType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.String>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.String>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)))),indexNames=(key)),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.String>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.String>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)))),indexNames=(key)), originalType=java.util.Map<java.lang.String, java.lang.String>}) has attributeInfo tabular type
[dd.trace 2020-08-31 12:10:15:073 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.MBeanAttributeInfo[description=StartTime, name=StartTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:073 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=SpecName,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:074 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=SpecVendor,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:074 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=SpecVersion,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:074 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ManagementSpecVersion,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:075 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.MBeanAttributeInfo[description=BootClassPathSupported, name=BootClassPathSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:075 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=VmName,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:075 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=VmVendor,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:076 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=VmVersion,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:076 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=LibraryPath,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:077 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=BootClassPath,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:077 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.MBeanAttributeInfo[description=Uptime, name=Uptime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:078 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=InputArguments,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=java.util.List<java.lang.String>}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:078 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Runtime : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:078 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=Threading
[dd.trace 2020-08-31 12:10:15:078 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=Threading
[dd.trace 2020-08-31 12:10:15:078 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadAllocatedMemoryEnabled, name=ThreadAllocatedMemoryEnabled, type=boolean, read/write, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:079 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadAllocatedMemorySupported, name=ThreadAllocatedMemorySupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:079 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=CurrentThreadCpuTime, name=CurrentThreadCpuTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:080 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadCount, name=ThreadCount, type=int, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Integer), originalType=int}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:081 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=TotalStartedThreadCount, name=TotalStartedThreadCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:081 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=AllThreadIds, name=AllThreadIds, type=[J, read-only, descriptor={openType=javax.management.openmbean.ArrayType(name=[J,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.Long),primitiveArray=true), originalType=[J}] has an unsupported type: [J
[dd.trace 2020-08-31 12:10:15:081 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadContentionMonitoringEnabled, name=ThreadContentionMonitoringEnabled, type=boolean, read/write, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:082 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=CurrentThreadUserTime, name=CurrentThreadUserTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:082 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadCpuTimeSupported, name=ThreadCpuTimeSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:082 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadCpuTimeEnabled, name=ThreadCpuTimeEnabled, type=boolean, read/write, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:083 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ThreadContentionMonitoringSupported, name=ThreadContentionMonitoringSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:083 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=CurrentThreadCpuTimeSupported, name=CurrentThreadCpuTimeSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:083 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=ObjectMonitorUsageSupported, name=ObjectMonitorUsageSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:083 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=SynchronizerUsageSupported, name=SynchronizerUsageSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:084 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=PeakThreadCount, name=PeakThreadCount, type=int, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Integer), originalType=int}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:084 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.MBeanAttributeInfo[description=DaemonThreadCount, name=DaemonThreadCount, type=int, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Integer), originalType=int}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:084 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Threading : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:085 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=OperatingSystem
[dd.trace 2020-08-31 12:10:15:085 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=OperatingSystem
[dd.trace 2020-08-31 12:10:15:085 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=OpenFileDescriptorCount, name=OpenFileDescriptorCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:086 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=MaxFileDescriptorCount, name=MaxFileDescriptorCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:087 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=CommittedVirtualMemorySize, name=CommittedVirtualMemorySize, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:087 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=TotalSwapSpaceSize, name=TotalSwapSpaceSize, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:087 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=FreeSwapSpaceSize, name=FreeSwapSpaceSize, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:087 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=ProcessCpuTime, name=ProcessCpuTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:088 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=FreePhysicalMemorySize, name=FreePhysicalMemorySize, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:088 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=TotalPhysicalMemorySize, name=TotalPhysicalMemorySize, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:088 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=SystemCpuLoad, name=SystemCpuLoad, type=double, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Double), originalType=double}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:089 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=ProcessCpuLoad, name=ProcessCpuLoad, type=double, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Double), originalType=double}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:090 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:091 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Arch,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:091 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=SystemLoadAverage, name=SystemLoadAverage, type=double, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Double), originalType=double}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:091 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.MBeanAttributeInfo[description=AvailableProcessors, name=AvailableProcessors, type=int, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Integer), originalType=int}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:092 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Version,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:092 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=OperatingSystem : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:092 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryPool,name=Code Cache
[dd.trace 2020-08-31 12:10:15:092 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryPool,name=Code Cache
[dd.trace 2020-08-31 12:10:15:092 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:092 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Type,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.management.MemoryType}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:093 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:093 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Usage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:093 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=PeakUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:094 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryManagerNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:094 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=UsageThreshold, name=UsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:094 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=UsageThresholdExceeded, name=UsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:094 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=UsageThresholdCount, name=UsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:095 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=UsageThresholdSupported, name=UsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:095 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=CollectionUsageThreshold, name=CollectionUsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:095 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdExceeded, name=CollectionUsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:096 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdCount, name=CollectionUsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:096 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=CollectionUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:096 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdSupported, name=CollectionUsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:096 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Code Cache : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:096 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.nio:type=BufferPool,name=direct
[dd.trace 2020-08-31 12:10:15:097 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.nio:type=BufferPool,name=direct
[dd.trace 2020-08-31 12:10:15:097 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=direct : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:097 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=direct : javax.management.MBeanAttributeInfo[description=Count, name=Count, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:097 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=direct : javax.management.MBeanAttributeInfo[description=TotalCapacity, name=TotalCapacity, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:098 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=direct : javax.management.MBeanAttributeInfo[description=MemoryUsed, name=MemoryUsed, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:098 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=direct : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:098 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=Compilation
[dd.trace 2020-08-31 12:10:15:098 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=Compilation
[dd.trace 2020-08-31 12:10:15:098 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Compilation : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:098 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Compilation : javax.management.MBeanAttributeInfo[description=TotalCompilationTime, name=TotalCompilationTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:099 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Compilation : javax.management.MBeanAttributeInfo[description=CompilationTimeMonitoringSupported, name=CompilationTimeMonitoringSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:099 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Compilation : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:099 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryManager,name=CodeCacheManager
[dd.trace 2020-08-31 12:10:15:099 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryManager,name=CodeCacheManager
[dd.trace 2020-08-31 12:10:15:099 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=CodeCacheManager : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:099 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=CodeCacheManager : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:100 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=CodeCacheManager : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryPoolNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:100 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=CodeCacheManager : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:100 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryPool,name=Compressed Class Space
[dd.trace 2020-08-31 12:10:15:100 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryPool,name=Compressed Class Space
[dd.trace 2020-08-31 12:10:15:100 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:100 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Type,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.management.MemoryType}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:101 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:101 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Usage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:101 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=PeakUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:102 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryManagerNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:102 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=UsageThreshold, name=UsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:102 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=UsageThresholdExceeded, name=UsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:102 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=UsageThresholdCount, name=UsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:103 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=UsageThresholdSupported, name=UsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:103 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThreshold, name=CollectionUsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:103 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdExceeded, name=CollectionUsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:104 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdCount, name=CollectionUsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:104 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=CollectionUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:104 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdSupported, name=CollectionUsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:105 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=Compressed Class Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:105 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=Memory
[dd.trace 2020-08-31 12:10:15:105 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=Memory
[dd.trace 2020-08-31 12:10:15:105 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Memory : javax.management.MBeanAttributeInfo[description=ObjectPendingFinalizationCount, name=ObjectPendingFinalizationCount, type=int, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Integer), originalType=int}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:105 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Memory : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=HeapMemoryUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:108 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Memory : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=NonHeapMemoryUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:109 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Memory : javax.management.MBeanAttributeInfo[description=Verbose, name=Verbose, type=boolean, read/write, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:110 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=Memory : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:110 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.nio:type=BufferPool,name=mapped
[dd.trace 2020-08-31 12:10:15:110 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.nio:type=BufferPool,name=mapped
[dd.trace 2020-08-31 12:10:15:110 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=mapped : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:110 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=mapped : javax.management.MBeanAttributeInfo[description=Count, name=Count, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:110 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=mapped : javax.management.MBeanAttributeInfo[description=TotalCapacity, name=TotalCapacity, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:111 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=mapped : javax.management.MBeanAttributeInfo[description=MemoryUsed, name=MemoryUsed, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:111 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.nio:type=BufferPool,name=mapped : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:111 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryPool,name=PS Survivor Space
[dd.trace 2020-08-31 12:10:15:111 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryPool,name=PS Survivor Space
[dd.trace 2020-08-31 12:10:15:111 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:112 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Type,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.management.MemoryType}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:112 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:112 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Usage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:113 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=PeakUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:113 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryManagerNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:113 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=UsageThreshold, name=UsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:114 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=UsageThresholdExceeded, name=UsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:114 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=UsageThresholdCount, name=UsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:114 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=UsageThresholdSupported, name=UsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:115 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThreshold, name=CollectionUsageThreshold, type=long, read/write, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:115 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdExceeded, name=CollectionUsageThresholdExceeded, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:115 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdCount, name=CollectionUsageThresholdCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:116 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=CollectionUsage,openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=java.lang.management.MemoryUsage}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:116 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.MBeanAttributeInfo[description=CollectionUsageThresholdSupported, name=CollectionUsageThresholdSupported, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:116 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryPool,name=PS Survivor Space : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:116 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=ClassLoading
[dd.trace 2020-08-31 12:10:15:116 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=ClassLoading
[dd.trace 2020-08-31 12:10:15:116 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=ClassLoading : javax.management.MBeanAttributeInfo[description=TotalLoadedClassCount, name=TotalLoadedClassCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:117 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=ClassLoading : javax.management.MBeanAttributeInfo[description=LoadedClassCount, name=LoadedClassCount, type=int, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Integer), originalType=int}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:118 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=ClassLoading : javax.management.MBeanAttributeInfo[description=UnloadedClassCount, name=UnloadedClassCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:118 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=ClassLoading : javax.management.MBeanAttributeInfo[description=Verbose, name=Verbose, type=boolean, read/write, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=ClassLoading : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=MemoryManager,name=Metaspace Manager
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=MemoryManager,name=Metaspace Manager
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=Metaspace Manager : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=Metaspace Manager : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=Metaspace Manager : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryPoolNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=MemoryManager,name=Metaspace Manager : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:119 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting class name for bean: java.lang:type=GarbageCollector,name=PS MarkSweep
[dd.trace 2020-08-31 12:10:15:120 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Getting attributes for bean: java.lang:type=GarbageCollector,name=PS MarkSweep
[dd.trace 2020-08-31 12:10:15:120 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=LastGcInfo,openType=javax.management.openmbean.CompositeType(name=com.sun.management.GcInfo,items=((itemName=duration,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=endTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=id,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=memoryUsageAfterGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=memoryUsageBeforeGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=startTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.CompositeType(name=com.sun.management.GcInfo,items=((itemName=duration,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=endTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=id,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=memoryUsageAfterGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=memoryUsageBeforeGc,itemType=javax.management.openmbean.TabularType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,rowType=javax.management.openmbean.CompositeType(name=java.util.Map<java.lang.String, java.lang.management.MemoryUsage>,items=((itemName=key,itemType=javax.management.openmbean.SimpleType(name=java.lang.String)),(itemName=value,itemType=javax.management.openmbean.CompositeType(name=java.lang.management.MemoryUsage,items=((itemName=committed,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=init,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=max,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)),(itemName=used,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long))))))),indexNames=(key))),(itemName=startTime,itemType=javax.management.openmbean.SimpleType(name=java.lang.Long)))), originalType=com.sun.management.GcInfo}) has attributeInfo composite type
[dd.trace 2020-08-31 12:10:15:121 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.MBeanAttributeInfo[description=CollectionCount, name=CollectionCount, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:121 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.MBeanAttributeInfo[description=CollectionTime, name=CollectionTime, type=long, read-only, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Long), originalType=long}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:121 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=Name,openType=javax.management.openmbean.SimpleType(name=java.lang.String),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.String), originalType=java.lang.String}) has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:122 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.MBeanAttributeInfo[description=Valid, name=Valid, type=boolean, read-only, isIs, descriptor={openType=javax.management.openmbean.SimpleType(name=java.lang.Boolean), originalType=boolean}] has attributeInfo simple type
[dd.trace 2020-08-31 12:10:15:122 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=MemoryPoolNames,openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.ArrayType(name=[Ljava.lang.String;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.String),primitiveArray=false), originalType=[Ljava.lang.String;}) has an unsupported type: [Ljava.lang.String;
[dd.trace 2020-08-31 12:10:15:122 -0600] [jmxfetch-recoveryPool-1] DEBUG org.datadog.jmxfetch.Instance - Attribute: java.lang:type=GarbageCollector,name=PS MarkSweep : javax.management.openmbean.OpenMBeanAttributeInfoSupport(name=ObjectName,openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName),default=null,minValue=null,maxValue=null,legalValues=null,descriptor={openType=javax.management.openmbean.SimpleType(name=javax.management.ObjectName), originalType=javax.management.ObjectName}) has an unsupported type: javax.management.ObjectName
[dd.trace 2020-08-31 12:10:15:122 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.Instance - Found 21 matching attributes
[dd.trace 2020-08-31 12:10:15:122 -0600] [jmxfetch-recoveryPool-1] INFO org.datadog.jmxfetch.Instance - Done initializing JMX Server at jvm_direct
[dd.trace 2020-08-31 12:10:15:122 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Completed instance initialization...
[dd.trace 2020-08-31 12:10:15:122 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.App - Successfully initialized instance: dd-java-agent default
[dd.trace 2020-08-31 12:10:15:124 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.reporter.Reporter - Instance dd-java-agent default is sending 27 metrics to the metrics reporter during collection #1
[dd.trace 2020-08-31 12:10:15:136 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Iteration ran in 13 ms
[dd.trace 2020-08-31 12:10:15:136 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Sleeping for 15000 ms.
[dd.trace 2020-08-31 12:10:16:006 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:012 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:013 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:014 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$1 -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:017 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:022 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:022 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:024 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$ConversionServiceInitializer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:112 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:116 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:116 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:117 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$ValidationInitializer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:196 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: mdc -- datadog.trace.instrumentation.slf4j.mdc.MDCInjectionInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:196 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.agent.tooling.log.LogContextScopeListener]
[dd.trace 2020-08-31 12:10:16:203 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.slf4j.MDC -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:302 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.WebApplicationContextInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:303 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.springweb.SpringWebHttpServerDecorator, datadog.trace.instrumentation.springweb.HandlerMappingResourceNameFilter, datadog.trace.instrumentation.springweb.HandlerMappingResourceNameFilter$BeanDefinition]
[dd.trace 2020-08-31 12:10:16:355 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.context.support.GenericWebApplicationContext -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:362 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:366 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:366 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:367 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.context.support.AbstractApplicationContext$1 -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:370 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: classloading -- datadog.trace.instrumentation.classloading.ClassloadingInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:371 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.agent.tooling.Constants]
[dd.trace 2020-08-31 12:10:16:382 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.context.support.ContextTypeMatchClassLoader -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:383 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: classloading -- datadog.trace.instrumentation.classloading.ClassloadingInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:388 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.core.DecoratingClassLoader -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:699 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:703 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:704 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:705 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$MessageConverterInitializer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:731 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:737 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:737 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:738 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.beans.factory.support.DisposableBeanAdapter -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:807 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:810 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:16:810 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:16:811 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$MBeanFactoryInitializer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:956 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.DispatcherServletInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:964 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet3.Servlet3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:16:965 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.springweb.SpringWebHttpServerDecorator, datadog.trace.instrumentation.springweb.HandlerMappingResourceNameFilter]
[dd.trace 2020-08-31 12:10:16:974 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.servlet3.Servlet3Decorator, datadog.trace.instrumentation.servlet3.HttpServletRequestExtractAdapter, datadog.trace.instrumentation.servlet3.TagSettingAsyncListener]
[dd.trace 2020-08-31 12:10:16:976 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$javax$servlet$http$HttpServletResponse$javax$servlet$http$HttpServletRequest]
[dd.trace 2020-08-31 12:10:16:979 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$javax$servlet$http$HttpServletResponse$javax$servlet$http$HttpServletRequest]
[dd.trace 2020-08-31 12:10:17:009 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.DispatcherServlet -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:012 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet3.Servlet3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:022 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.FrameworkServlet -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:024 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet3.Servlet3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:028 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:028 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.HttpServletBean -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:030 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet3.Servlet3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:031 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:17:031 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:17:031 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$JacksonInitializer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:034 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:035 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet3.Servlet3Instrumentation
[dd.trace 2020-08-31 12:10:17:035 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet3.Servlet3Instrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:17:036 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:17:036 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:17:037 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed javax.servlet.http.HttpServlet -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:037 -0600] [background-preinit] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.boot.autoconfigure.BackgroundPreinitializer$CharsetInitializer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:152 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: trace -- datadog.trace.instrumentation.trace_annotation.TraceAnnotationsInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:152 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.trace_annotation.TraceDecorator]
[dd.trace 2020-08-31 12:10:17:169 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed hello.GreetingController -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:446 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.HandlerAdapterInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:447 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.springweb.SpringWebHttpServerDecorator]
[dd.trace 2020-08-31 12:10:17:459 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:461 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.HandlerAdapterInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:465 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:477 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.HandlerAdapterInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:479 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:480 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.HandlerAdapterInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:483 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:594 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:17:598 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:10:17:598 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.CallableInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:17:599 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.cglib.core.internal.LoadingCache$2 -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:050 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.WebApplicationContextInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:065 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.context.support.XmlWebApplicationContext -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:066 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: spring-web -- datadog.trace.instrumentation.springweb.WebApplicationContextInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:073 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.springframework.web.context.support.AbstractRefreshableWebApplicationContext -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:159 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:163 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:18:163 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:163 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.SocketProcessorBase -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:164 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:166 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.NioEndpoint$SocketProcessor -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:167 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:171 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.AbstractEndpoint$Acceptor -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:171 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:173 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:18:174 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:174 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.NioEndpoint$Acceptor -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:205 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:207 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:18:207 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:207 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.coyote.AbstractProtocol$AsyncTimeout -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:277 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:280 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:18:280 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:282 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.NioEndpoint$Poller -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:338 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:338 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.servlet.ServletRequestSetter, datadog.trace.instrumentation.servlet.http.HttpServletResponseDecorator]
[dd.trace 2020-08-31 12:10:18:338 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$javax$servlet$http$HttpServletResponse$javax$servlet$http$HttpServletRequest]
[dd.trace 2020-08-31 12:10:18:341 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$javax$servlet$http$HttpServletResponse$javax$servlet$http$HttpServletRequest]
[dd.trace 2020-08-31 12:10:18:351 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:18:351 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:18:351 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:18:351 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:18:352 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:18:352 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:18:353 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:18:353 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:18:354 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.connector.Response -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:367 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: classloading -- datadog.trace.instrumentation.classloading.ClassloadingInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:376 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.loader.WebappClassLoaderBase -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:381 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: classloading -- datadog.trace.instrumentation.classloading.ClassloadingInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:385 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.loader.ParallelWebappClassLoader -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:459 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:461 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:10:18:461 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.CallableInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:462 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ContainerBase$StartChild -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:462 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on null
[dd.trace 2020-08-31 12:10:18:465 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:10:18:465 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.CallableInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:466 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed datadog.trace.bootstrap.instrumentation.java.concurrent.CallableWrapper -- null
[dd.trace 2020-08-31 12:10:18:484 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:485 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$javax$servlet$RequestDispatcher$java$lang$String]
[dd.trace 2020-08-31 12:10:18:486 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$javax$servlet$RequestDispatcher$java$lang$String]
[dd.trace 2020-08-31 12:10:18:496 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation
[dd.trace 2020-08-31 12:10:18:496 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation: javax.servlet.RequestDispatcher -> java.lang.String
[dd.trace 2020-08-31 12:10:18:497 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation
[dd.trace 2020-08-31 12:10:18:497 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation: javax.servlet.RequestDispatcher -> java.lang.String
[dd.trace 2020-08-31 12:10:18:498 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ApplicationContext -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:505 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:510 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation
[dd.trace 2020-08-31 12:10:18:510 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation: javax.servlet.RequestDispatcher -> java.lang.String
[dd.trace 2020-08-31 12:10:18:510 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation
[dd.trace 2020-08-31 12:10:18:510 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation: javax.servlet.RequestDispatcher -> java.lang.String
[dd.trace 2020-08-31 12:10:18:511 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ApplicationContextFacade -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:570 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet3.Servlet3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:579 -0600] [localhost-startStop-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.servlets.DefaultServlet -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:755 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:757 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:18:757 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:757 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:935 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: okhttp -- datadog.trace.instrumentation.okhttp3.OkHttp3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:935 -0600] [main] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.okhttp3.RequestBuilderInjectAdapter, datadog.trace.instrumentation.okhttp3.OkHttpClientDecorator, datadog.trace.instrumentation.okhttp3.TracingInterceptor]
[dd.trace 2020-08-31 12:10:18:939 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed okhttp3.OkHttpClient -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:959 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:18:961 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:18:961 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:18:962 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed okhttp3.ConnectionPool$1 -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:19:231 -0600] [main] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for org.springframework.core.task.SimpleAsyncTaskExecutor
[dd.trace 2020-08-31 12:10:19:231 -0600] [main] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for org.springframework.core.task.SimpleAsyncTaskExecutor
[dd.trace 2020-08-31 12:10:19:768 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:19:773 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:19:773 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:19:774 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:19:778 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:19:781 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.threads.TaskThread -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:19:782 -0600] [main] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for org.apache.tomcat.util.threads.ThreadPoolExecutor
[dd.trace 2020-08-31 12:10:19:782 -0600] [main] DEBUG datadog.trace.instrumentation.java.concurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for org.apache.tomcat.util.threads.ThreadPoolExecutor
[dd.trace 2020-08-31 12:10:19:787 -0600] [main] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:19:788 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:19:788 -0600] [main] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:19:789 -0600] [main] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.threads.TaskThread$WrappingRunnable -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:548 -0600] [http-nio-9390-Acceptor-0] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:550 -0600] [http-nio-9390-Acceptor-0] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:24:551 -0600] [http-nio-9390-Acceptor-0] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:24:551 -0600] [http-nio-9390-Acceptor-0] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.NioEndpoint$PollerEvent -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:666 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet3.Servlet3Instrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:669 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet3.Servlet3Instrumentation
[dd.trace 2020-08-31 12:10:24:669 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet3.Servlet3Instrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:24:670 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ApplicationFilterChain -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:672 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:672 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.servlet.ServletRequestSetter, datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherDecorator]
[dd.trace 2020-08-31 12:10:24:673 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$javax$servlet$RequestDispatcher$java$lang$String]
[dd.trace 2020-08-31 12:10:24:674 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$javax$servlet$RequestDispatcher$java$lang$String]
[dd.trace 2020-08-31 12:10:24:681 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation
[dd.trace 2020-08-31 12:10:24:681 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation: javax.servlet.RequestDispatcher -> java.lang.String
[dd.trace 2020-08-31 12:10:24:682 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation
[dd.trace 2020-08-31 12:10:24:682 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation: javax.servlet.RequestDispatcher -> java.lang.String
[dd.trace 2020-08-31 12:10:24:683 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ApplicationDispatcher -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:686 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: servlet -- datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:690 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:24:690 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:24:690 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:24:690 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:24:691 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation
[dd.trace 2020-08-31 12:10:24:691 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: javax.servlet.http.HttpServletResponse -> javax.servlet.http.HttpServletRequest
[dd.trace 2020-08-31 12:10:24:691 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.connector.ResponseFacade -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:696 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - dd.timestamps t_id=2192664606961408693 stn=1598897424696000000ns snt=261827427451062ns
[dd.trace 2020-08-31 12:10:24:698 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=4877757176512987585 stm=1598897424698000us up=false stn=1598897424697804465ns diff=195535ns
[dd.trace 2020-08-31 12:10:24:698 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2192664606961408693, s_id=4877757176512987585, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={language=jvm, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0
[dd.trace 2020-08-31 12:10:24:698 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> registered span DDSpan [ t_id=2192664606961408693, s_id=4877757176512987585, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={language=jvm, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0. count = 1
[dd.trace 2020-08-31 12:10:24:713 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=4146456994156363309 stm=1598897424713000us up=false stn=1598897424712947198ns diff=52802ns
[dd.trace 2020-08-31 12:10:24:713 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2192664606961408693, s_id=4146456994156363309, p_id=4877757176512987585] trace=springtest0/spring.handler/spring.handler metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0
[dd.trace 2020-08-31 12:10:24:713 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> registered span DDSpan [ t_id=2192664606961408693, s_id=4146456994156363309, p_id=4877757176512987585] trace=springtest0/spring.handler/spring.handler metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0. count = 2
[dd.trace 2020-08-31 12:10:24:731 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: opentracing -- datadog.trace.instrumentation.opentracing32.GlobalTracerInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:731 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5 -> [datadog.trace.instrumentation.opentracing32.OTTracer, datadog.trace.instrumentation.opentracing32.OTTracer$OTSpanBuilder, datadog.trace.instrumentation.opentracing32.OTPropagation$TextMapInjectSetter, datadog.trace.instrumentation.opentracing32.OTPropagation$TextMapExtractGetter, datadog.trace.instrumentation.opentracing32.OTScopeManager, datadog.trace.instrumentation.opentracing32.OTScopeManager$OTScope, datadog.trace.instrumentation.opentracing32.OTScopeManager$OTTraceScope, datadog.trace.instrumentation.opentracing32.TypeConverter, datadog.trace.instrumentation.opentracing32.OTSpan, datadog.trace.instrumentation.opentracing32.OTSpanContext, datadog.trace.instrumentation.opentracing.LogHandler, datadog.trace.instrumentation.opentracing.DefaultLogHandler]
[dd.trace 2020-08-31 12:10:24:736 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentracing.util.GlobalTracer -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:738 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:739 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:10:24:739 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.CallableInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:24:740 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentracing.util.GlobalTracer$1 -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:24:740 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=8643288643866513036 stm=1598897424740000us up=false stn=1598897424740367338ns diff=-367338ns
[dd.trace 2020-08-31 12:10:24:740 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2192664606961408693, s_id=8643288643866513036, p_id=4146456994156363309] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0
[dd.trace 2020-08-31 12:10:24:740 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> registered span DDSpan [ t_id=2192664606961408693, s_id=8643288643866513036, p_id=4146456994156363309] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:24:945 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2192664606961408693, s_id=8643288643866513036, p_id=4146456994156363309] trace=springtest0/job.exec/job.exec metrics={} tags={component=trace, resource.name=MyJob.process, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=204575798
[dd.trace 2020-08-31 12:10:24:945 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:24:945 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=8643288643866513036 stm=1598897424740000us up=false stn=1598897424740367338ns diff=-367338ns, duration=204575798ns
[dd.trace 2020-08-31 12:10:25:203 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=39488364293211173 stm=1598897425203000us up=false stn=1598897425203275705ns diff=-275705ns
[dd.trace 2020-08-31 12:10:25:203 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2192664606961408693, s_id=39488364293211173, p_id=4146456994156363309] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0
[dd.trace 2020-08-31 12:10:25:204 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> registered span DDSpan [ t_id=2192664606961408693, s_id=39488364293211173, p_id=4146456994156363309] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:25:408 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2192664606961408693, s_id=39488364293211173, p_id=4146456994156363309] trace=springtest0/job.exec/job.exec metrics={} tags={component=trace, resource.name=MyJob.process, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=204776441
[dd.trace 2020-08-31 12:10:25:408 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:25:409 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=39488364293211173 stm=1598897425203000us up=false stn=1598897425203275705ns diff=-275705ns, duration=204776441ns
[dd.trace 2020-08-31 12:10:25:628 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=355759812637637464 stm=1598897425628000us up=false stn=1598897425627634240ns diff=365760ns
[dd.trace 2020-08-31 12:10:25:628 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2192664606961408693, s_id=355759812637637464, p_id=4146456994156363309] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0
[dd.trace 2020-08-31 12:10:25:628 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> registered span DDSpan [ t_id=2192664606961408693, s_id=355759812637637464, p_id=4146456994156363309] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:25:628 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.common.sampling.DeterministicSampler - DDSpan [ t_id=2192664606961408693, s_id=4877757176512987585, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53076, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=0 - Span is sampled: true
[dd.trace 2020-08-31 12:10:25:628 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpanContext - Set sampling priority to 1
[dd.trace 2020-08-31 12:10:25:628 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpanContext - DDSpan [ t_id=2192664606961408693, s_id=4877757176512987585, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={_dd.agent_psr=1.0, _sampling_priority_v1=1} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53076, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=28, thread.name=http-nio-9390-exec-1} : locked samplingPriority to 1
[dd.trace 2020-08-31 12:10:25:629 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.propagation.DatadogHttpCodec - 2192664606961408693 - Datadog parent context injected
[dd.trace 2020-08-31 12:10:25:664 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:25:667 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:25:667 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:25:667 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed okio.AsyncTimeout$Watchdog -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:25:926 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2192664606961408693, s_id=355759812637637464, p_id=4146456994156363309] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={_dd.measured=true, component=okhttp, http.method=GET, http.status_code=200, http.url=http://localhost:9393/ServiceD, peer.hostname=localhost, peer.port=9393, span.kind=client, span.type=http, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=298131100
[dd.trace 2020-08-31 12:10:25:926 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:25:926 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=355759812637637464 stm=1598897425628000us up=false stn=1598897425627634240ns diff=365760ns, duration=298131100ns
[dd.trace 2020-08-31 12:10:25:944 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:25:947 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation
[dd.trace 2020-08-31 12:10:25:947 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: java.lang.Runnable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:10:25:948 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller$RunnableRemove -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:10:25:949 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2192664606961408693, s_id=4146456994156363309, p_id=4877757176512987585] trace=springtest0/spring.handler/spring.handler metrics={} tags={_dd.measured=true, component=spring-web-controller, language=jvm, ok=pickachu, resource.name=GreetingController.serviceC, span.kind=server, span.type=web, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=1236013930
[dd.trace 2020-08-31 12:10:25:949 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> expired reference. count=1 spans=1 continuations=0
[dd.trace 2020-08-31 12:10:25:949 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=4146456994156363309 stm=1598897424713000us up=false stn=1598897424712947198ns diff=52802ns, duration=1236013930ns
[dd.trace 2020-08-31 12:10:25:950 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2192664606961408693, s_id=4877757176512987585, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={_dd.agent_psr=1.0, _sampling_priority_v1=1} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.status_code=200, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53076, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=28, thread.name=http-nio-9390-exec-1}, duration_ns=1252211538
[dd.trace 2020-08-31 12:10:25:950 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - Writing 5 spans to datadog.trace.agent.common.writer.DDAgentWriter@2c0f7678.
[dd.trace 2020-08-31 12:10:25:950 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2192664606961408693 -> expired reference. count=0 spans=0 continuations=0
[dd.trace 2020-08-31 12:10:25:950 -0600] [http-nio-9390-exec-1] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2192664606961408693 s_id=4877757176512987585 stm=1598897424698000us up=false stn=1598897424697804465ns diff=195535ns, duration=1252211538ns
[dd.trace 2020-08-31 12:10:26:084 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.DDAgentApi - API v0.4 endpoints not available. Downgrading to v0.3
[dd.trace 2020-08-31 12:10:26:085 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.DDAgentApi - Error while sending 1 of 1 (size=1KB) traces to the DD agent. Total: 1, Received: 1, Sent: 0, Failed: 1.
java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:8126
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:249)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:258)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:127)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:257)
	at okhttp3.RealCall.execute(RealCall.java:93)
	at datadog.trace.agent.common.writer.ddagent.DDAgentApi.sendSerializedTraces(DDAgentApi.java:103)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.accept(TraceProcessingDisruptor.java:209)
	at datadog.trace.agent.core.serialization.msgpack.Packer.flush(Packer.java:120)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.onEvent(TraceProcessingDisruptor.java:159)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.onEvent(TraceProcessingDisruptor.java:114)
	at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:168)
	at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
	... 25 more
[dd.trace 2020-08-31 12:10:26:086 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor - Failed to send 1 traces (representing 1) of size 1831 bytes to the API
[dd.trace 2020-08-31 12:10:27:249 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - dd.timestamps t_id=2989266981180370014 stn=1598897427248000000ns snt=261829979965967ns
[dd.trace 2020-08-31 12:10:27:249 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=6205963212237310661 stm=1598897427249000us up=false stn=1598897427248226148ns diff=773852ns
[dd.trace 2020-08-31 12:10:27:249 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2989266981180370014, s_id=6205963212237310661, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={language=jvm, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0
[dd.trace 2020-08-31 12:10:27:249 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> registered span DDSpan [ t_id=2989266981180370014, s_id=6205963212237310661, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={language=jvm, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0. count = 1
[dd.trace 2020-08-31 12:10:27:256 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=1998224104561223894 stm=1598897427256000us up=false stn=1598897427255509543ns diff=490457ns
[dd.trace 2020-08-31 12:10:27:256 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2989266981180370014, s_id=1998224104561223894, p_id=6205963212237310661] trace=springtest0/spring.handler/spring.handler metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0
[dd.trace 2020-08-31 12:10:27:256 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> registered span DDSpan [ t_id=2989266981180370014, s_id=1998224104561223894, p_id=6205963212237310661] trace=springtest0/spring.handler/spring.handler metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0. count = 2
[dd.trace 2020-08-31 12:10:27:258 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=8757070001354041456 stm=1598897427258000us up=false stn=1598897427257672840ns diff=327160ns
[dd.trace 2020-08-31 12:10:27:258 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2989266981180370014, s_id=8757070001354041456, p_id=1998224104561223894] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0
[dd.trace 2020-08-31 12:10:27:259 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> registered span DDSpan [ t_id=2989266981180370014, s_id=8757070001354041456, p_id=1998224104561223894] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:27:462 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2989266981180370014, s_id=8757070001354041456, p_id=1998224104561223894] trace=springtest0/job.exec/job.exec metrics={} tags={component=trace, resource.name=MyJob.process, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=203817283
[dd.trace 2020-08-31 12:10:27:462 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:27:462 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=8757070001354041456 stm=1598897427258000us up=false stn=1598897427257672840ns diff=327160ns, duration=203817283ns
[dd.trace 2020-08-31 12:10:27:719 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=3326624363749343960 stm=1598897427719000us up=false stn=1598897427718533132ns diff=466868ns
[dd.trace 2020-08-31 12:10:27:719 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2989266981180370014, s_id=3326624363749343960, p_id=1998224104561223894] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0
[dd.trace 2020-08-31 12:10:27:719 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> registered span DDSpan [ t_id=2989266981180370014, s_id=3326624363749343960, p_id=1998224104561223894] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:27:925 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2989266981180370014, s_id=3326624363749343960, p_id=1998224104561223894] trace=springtest0/job.exec/job.exec metrics={} tags={component=trace, resource.name=MyJob.process, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=205439573
[dd.trace 2020-08-31 12:10:27:925 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:27:925 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=3326624363749343960 stm=1598897427719000us up=false stn=1598897427718533132ns diff=466868ns, duration=205439573ns
[dd.trace 2020-08-31 12:10:28:131 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=1666041177159505259 stm=1598897428131000us up=false stn=1598897428130828236ns diff=171764ns
[dd.trace 2020-08-31 12:10:28:132 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=2989266981180370014, s_id=1666041177159505259, p_id=1998224104561223894] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0
[dd.trace 2020-08-31 12:10:28:132 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> registered span DDSpan [ t_id=2989266981180370014, s_id=1666041177159505259, p_id=1998224104561223894] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:28:132 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.common.sampling.DeterministicSampler - DDSpan [ t_id=2989266981180370014, s_id=6205963212237310661, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53089, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=0 - Span is sampled: true
[dd.trace 2020-08-31 12:10:28:132 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpanContext - Set sampling priority to 1
[dd.trace 2020-08-31 12:10:28:132 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpanContext - DDSpan [ t_id=2989266981180370014, s_id=6205963212237310661, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={_dd.agent_psr=1.0, _sampling_priority_v1=1} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53089, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=29, thread.name=http-nio-9390-exec-2} : locked samplingPriority to 1
[dd.trace 2020-08-31 12:10:28:132 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.propagation.DatadogHttpCodec - 2989266981180370014 - Datadog parent context injected
[dd.trace 2020-08-31 12:10:28:372 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2989266981180370014, s_id=1666041177159505259, p_id=1998224104561223894] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={_dd.measured=true, component=okhttp, http.method=GET, http.status_code=200, http.url=http://localhost:9393/ServiceD, peer.hostname=localhost, peer.port=9393, span.kind=client, span.type=http, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=240767682
[dd.trace 2020-08-31 12:10:28:372 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:28:372 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=1666041177159505259 stm=1598897428131000us up=false stn=1598897428130828236ns diff=171764ns, duration=240767682ns
[dd.trace 2020-08-31 12:10:28:374 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2989266981180370014, s_id=1998224104561223894, p_id=6205963212237310661] trace=springtest0/spring.handler/spring.handler metrics={} tags={_dd.measured=true, component=spring-web-controller, language=jvm, ok=pickachu, resource.name=GreetingController.serviceC, span.kind=server, span.type=web, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=1118181535
[dd.trace 2020-08-31 12:10:28:374 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> expired reference. count=1 spans=1 continuations=0
[dd.trace 2020-08-31 12:10:28:374 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=1998224104561223894 stm=1598897427256000us up=false stn=1598897427255509543ns diff=490457ns, duration=1118181535ns
[dd.trace 2020-08-31 12:10:28:375 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=2989266981180370014, s_id=6205963212237310661, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={_dd.agent_psr=1.0, _sampling_priority_v1=1} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.status_code=200, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53089, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=29, thread.name=http-nio-9390-exec-2}, duration_ns=1126051932
[dd.trace 2020-08-31 12:10:28:375 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - Writing 5 spans to datadog.trace.agent.common.writer.DDAgentWriter@2c0f7678.
[dd.trace 2020-08-31 12:10:28:375 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.PendingTrace - t_id=2989266981180370014 -> expired reference. count=0 spans=0 continuations=0
[dd.trace 2020-08-31 12:10:28:375 -0600] [http-nio-9390-exec-2] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=2989266981180370014 s_id=6205963212237310661 stm=1598897427249000us up=false stn=1598897427248226148ns diff=773852ns, duration=1126051932ns
[dd.trace 2020-08-31 12:10:28:436 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.DDAgentApi - Error while sending 1 of 1 (size=1KB) traces to the DD agent. Total: 2, Received: 2, Sent: 0, Failed: 2.
java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:8126
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:249)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:258)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:127)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:257)
	at okhttp3.RealCall.execute(RealCall.java:93)
	at datadog.trace.agent.common.writer.ddagent.DDAgentApi.sendSerializedTraces(DDAgentApi.java:103)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.accept(TraceProcessingDisruptor.java:209)
	at datadog.trace.agent.core.serialization.msgpack.Packer.flush(Packer.java:120)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.onEvent(TraceProcessingDisruptor.java:159)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.onEvent(TraceProcessingDisruptor.java:114)
	at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:168)
	at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
	... 25 more
[dd.trace 2020-08-31 12:10:28:438 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor - Failed to send 1 traces (representing 1) of size 1831 bytes to the API
[dd.trace 2020-08-31 12:10:29:933 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - dd.timestamps t_id=8902590871678507534 stn=1598897429933000000ns snt=261832664790082ns
[dd.trace 2020-08-31 12:10:29:933 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=8945398096610796174 stm=1598897429933000us up=false stn=1598897429933091624ns diff=-91624ns
[dd.trace 2020-08-31 12:10:29:934 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=8902590871678507534, s_id=8945398096610796174, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={language=jvm, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0
[dd.trace 2020-08-31 12:10:29:934 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> registered span DDSpan [ t_id=8902590871678507534, s_id=8945398096610796174, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={language=jvm, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0. count = 1
[dd.trace 2020-08-31 12:10:29:935 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=544415306491255259 stm=1598897429935000us up=false stn=1598897429934620105ns diff=379895ns
[dd.trace 2020-08-31 12:10:29:935 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=8902590871678507534, s_id=544415306491255259, p_id=8945398096610796174] trace=springtest0/spring.handler/spring.handler metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0
[dd.trace 2020-08-31 12:10:29:935 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> registered span DDSpan [ t_id=8902590871678507534, s_id=544415306491255259, p_id=8945398096610796174] trace=springtest0/spring.handler/spring.handler metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0. count = 2
[dd.trace 2020-08-31 12:10:29:936 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=54872934357185075 stm=1598897429936000us up=false stn=1598897429935130904ns diff=869096ns
[dd.trace 2020-08-31 12:10:29:936 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=8902590871678507534, s_id=54872934357185075, p_id=544415306491255259] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0
[dd.trace 2020-08-31 12:10:29:936 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> registered span DDSpan [ t_id=8902590871678507534, s_id=54872934357185075, p_id=544415306491255259] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:30:139 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=8902590871678507534, s_id=54872934357185075, p_id=544415306491255259] trace=springtest0/job.exec/job.exec metrics={} tags={component=trace, resource.name=MyJob.process, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=203510328
[dd.trace 2020-08-31 12:10:30:139 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:30:139 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=54872934357185075 stm=1598897429936000us up=false stn=1598897429935130904ns diff=869096ns, duration=203510328ns
[dd.trace 2020-08-31 12:10:30:140 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.reporter.Reporter - Instance dd-java-agent default is sending 27 metrics to the metrics reporter during collection #2
[dd.trace 2020-08-31 12:10:30:141 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Iteration ran in 4 ms
[dd.trace 2020-08-31 12:10:30:141 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Sleeping for 15000 ms.
[dd.trace 2020-08-31 12:10:30:398 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=6233978896402798205 stm=1598897430398000us up=false stn=1598897430397600735ns diff=399265ns
[dd.trace 2020-08-31 12:10:30:398 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=8902590871678507534, s_id=6233978896402798205, p_id=544415306491255259] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0
[dd.trace 2020-08-31 12:10:30:398 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> registered span DDSpan [ t_id=8902590871678507534, s_id=6233978896402798205, p_id=544415306491255259] trace=springtest0/job.exec/job.exec metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:30:603 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=8902590871678507534, s_id=6233978896402798205, p_id=544415306491255259] trace=springtest0/job.exec/job.exec metrics={} tags={component=trace, resource.name=MyJob.process, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=204933355
[dd.trace 2020-08-31 12:10:30:603 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:30:603 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=6233978896402798205 stm=1598897430398000us up=false stn=1598897430397600735ns diff=399265ns, duration=204933355ns
[dd.trace 2020-08-31 12:10:30:808 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=929415548533043761 stm=1598897430808000us up=false stn=1598897430808029620ns diff=-29620ns
[dd.trace 2020-08-31 12:10:30:834 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Started span: DDSpan [ t_id=8902590871678507534, s_id=929415548533043761, p_id=544415306491255259] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0
[dd.trace 2020-08-31 12:10:30:835 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> registered span DDSpan [ t_id=8902590871678507534, s_id=929415548533043761, p_id=544415306491255259] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0. count = 3
[dd.trace 2020-08-31 12:10:30:835 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.common.sampling.DeterministicSampler - DDSpan [ t_id=8902590871678507534, s_id=8945398096610796174, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53102, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=0 - Span is sampled: true
[dd.trace 2020-08-31 12:10:30:835 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpanContext - Set sampling priority to 1
[dd.trace 2020-08-31 12:10:30:835 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpanContext - DDSpan [ t_id=8902590871678507534, s_id=8945398096610796174, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={_dd.agent_psr=1.0, _sampling_priority_v1=1} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53102, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=30, thread.name=http-nio-9390-exec-3} : locked samplingPriority to 1
[dd.trace 2020-08-31 12:10:30:835 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.propagation.DatadogHttpCodec - 8902590871678507534 - Datadog parent context injected
[dd.trace 2020-08-31 12:10:31:077 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=8902590871678507534, s_id=929415548533043761, p_id=544415306491255259] trace=springtest0/okhttp.request/okhttp.request metrics={} tags={_dd.measured=true, component=okhttp, http.method=GET, http.status_code=200, http.url=http://localhost:9393/ServiceD, peer.hostname=localhost, peer.port=9393, span.kind=client, span.type=http, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=268174452
[dd.trace 2020-08-31 12:10:31:077 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> expired reference. count=2 spans=2 continuations=0
[dd.trace 2020-08-31 12:10:31:077 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=929415548533043761 stm=1598897430808000us up=false stn=1598897430808029620ns diff=-29620ns, duration=268174452ns
[dd.trace 2020-08-31 12:10:31:078 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=8902590871678507534, s_id=544415306491255259, p_id=8945398096610796174] trace=springtest0/spring.handler/spring.handler metrics={} tags={_dd.measured=true, component=spring-web-controller, language=jvm, ok=pickachu, resource.name=GreetingController.serviceC, span.kind=server, span.type=web, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=1142796514
[dd.trace 2020-08-31 12:10:31:078 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> expired reference. count=1 spans=1 continuations=0
[dd.trace 2020-08-31 12:10:31:078 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=544415306491255259 stm=1598897429935000us up=false stn=1598897429934620105ns diff=379895ns, duration=1142796514ns
[dd.trace 2020-08-31 12:10:31:079 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - Finished span: DDSpan [ t_id=8902590871678507534, s_id=8945398096610796174, p_id=0] trace=springtest0/servlet.request/servlet.request metrics={_dd.agent_psr=1.0, _sampling_priority_v1=1} tags={_dd.measured=true, _dd1.sr.eausr=1.0, component=java-web-servlet, da_heck=pickachu, http.method=GET, http.status_code=200, http.url=http://localhost:9390/ServiceC, language=jvm, peer.ipv6=0:0:0:0:0:0:0:1, peer.port=53102, resource.name=Maximo, runtime-id=81695baa-a0f5-4ae6-9734-fba9b531a28b, servlet.path=/ServiceC, span.kind=server, span.origin.type=org.apache.catalina.core.ApplicationFilterChain, span.type=web, this.one=pull, thread.id=30, thread.name=http-nio-9390-exec-3}, duration_ns=1145149890
[dd.trace 2020-08-31 12:10:31:079 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - Writing 5 spans to datadog.trace.agent.common.writer.DDAgentWriter@2c0f7678.
[dd.trace 2020-08-31 12:10:31:079 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.PendingTrace - t_id=8902590871678507534 -> expired reference. count=0 spans=0 continuations=0
[dd.trace 2020-08-31 12:10:31:079 -0600] [http-nio-9390-exec-3] DEBUG datadog.trace.agent.core.DDSpan - dd.timestamps t_id=8902590871678507534 s_id=8945398096610796174 stm=1598897429933000us up=false stn=1598897429933091624ns diff=-91624ns, duration=1145149890ns
[dd.trace 2020-08-31 12:10:31:139 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.DDAgentApi - Error while sending 1 of 1 (size=1KB) traces to the DD agent. Total: 3, Received: 3, Sent: 0, Failed: 3.
java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:8126
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:249)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:258)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:127)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:257)
	at okhttp3.RealCall.execute(RealCall.java:93)
	at datadog.trace.agent.common.writer.ddagent.DDAgentApi.sendSerializedTraces(DDAgentApi.java:103)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.accept(TraceProcessingDisruptor.java:209)
	at datadog.trace.agent.core.serialization.msgpack.Packer.flush(Packer.java:120)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.onEvent(TraceProcessingDisruptor.java:159)
	at datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor$TraceSerializingHandler.onEvent(TraceProcessingDisruptor.java:114)
	at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:168)
	at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
	... 25 more
[dd.trace 2020-08-31 12:10:31:140 -0600] [dd-trace-processor] DEBUG datadog.trace.agent.common.writer.ddagent.TraceProcessingDisruptor - Failed to send 1 traces (representing 1) of size 1831 bytes to the API
[dd.trace 2020-08-31 12:10:45:144 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.reporter.Reporter - Instance dd-java-agent default is sending 27 metrics to the metrics reporter during collection #3
[dd.trace 2020-08-31 12:10:45:146 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Iteration ran in 4 ms
[dd.trace 2020-08-31 12:10:45:146 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Sleeping for 15000 ms.
[dd.trace 2020-08-31 12:11:00:146 -0600] [dd-jmx-collector] WARN org.datadog.jmxfetch.App - Executor has to be replaced for collection processor, previous one hogging threads
[dd.trace 2020-08-31 12:11:00:149 -0600] [dd-jmx-collector] INFO org.datadog.jmxfetch.reporter.Reporter - Instance dd-java-agent default is sending 27 metrics to the metrics reporter during collection #4
[dd.trace 2020-08-31 12:11:00:150 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Iteration ran in 4 ms
[dd.trace 2020-08-31 12:11:00:150 -0600] [dd-jmx-collector] DEBUG org.datadog.jmxfetch.App - Sleeping for 15000 ms.
[dd.trace 2020-08-31 12:11:00:953 -0600] [Thread-5] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: java_concurrent -- datadog.trace.instrumentation.java.concurrent.CallableInstrumentation on org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:11:00:955 -0600] [Thread-5] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Found context-store access in datadog.trace.instrumentation.java.concurrent.CallableInstrumentation
[dd.trace 2020-08-31 12:11:00:955 -0600] [Thread-5] DEBUG datadog.trace.agent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter datadog.trace.instrumentation.java.concurrent.CallableInstrumentation: java.util.concurrent.Callable -> datadog.trace.bootstrap.instrumentation.java.concurrent.State
[dd.trace 2020-08-31 12:11:00:955 -0600] [Thread-5] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.catalina.core.ContainerBase$StopChild -- org.springframework.boot.loader.LaunchedURLClassLoader@49d98dc5
[dd.trace 2020-08-31 12:11:00:976 -0600] [localhost-startStop-2] DEBUG datadog.trace.agent.tooling.Instrumenter$Default - Applying instrumentation: rmi -- datadog.trace.instrumentation.rmi.context.server.RmiServerContextInstrumentation on null
[dd.trace 2020-08-31 12:11:00:976 -0600] [localhost-startStop-2] DEBUG datadog.trace.agent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [datadog.trace.instrumentation.rmi.context.ContextPayload$InjectAdapter, datadog.trace.instrumentation.rmi.context.ContextPayload$ExtractAdapter, datadog.trace.instrumentation.rmi.context.ContextPayload, datadog.trace.instrumentation.rmi.context.ContextPropagator, datadog.trace.instrumentation.rmi.context.server.ContextDispatcher, datadog.trace.instrumentation.rmi.context.server.ContextDispatcher$NoopRemote]
[dd.trace 2020-08-31 12:11:00:985 -0600] [localhost-startStop-2] DEBUG datadog.trace.agent.tooling.AgentInstaller$TransformLoggingListener - Transformed sun.rmi.transport.ObjectTable -- null
